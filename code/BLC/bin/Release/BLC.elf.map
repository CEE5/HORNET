Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr4/crtm8.o (exit)

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000002000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr4/crtm8.o
LOAD obj/Release/main.o
LOAD /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a
LOAD /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr4/libm.a
LOAD /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a
LOAD /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr4/libc.a
LOAD /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0x18e
 *(.vectors)
 .vectors       0x0000000000000000       0x26 /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr4/crtm8.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x0000000000000026                . = ALIGN (0x2)
                0x0000000000000026                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000026        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000026                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000026                __ctors_start = .
 *(.ctors)
                0x0000000000000026                __ctors_end = .
                0x0000000000000026                __dtors_start = .
 *(.dtors)
                0x0000000000000026                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000026        0x0 /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr4/crtm8.o
                0x0000000000000026                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000026        0xc /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr4/crtm8.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000000000000032        0x4 /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr4/crtm8.o
 *(.init9)
 *(.text)
 .text          0x0000000000000036        0x2 /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr4/crtm8.o
                0x0000000000000036                __vector_1
                0x0000000000000036                __vector_12
                0x0000000000000036                __bad_interrupt
                0x0000000000000036                __vector_6
                0x0000000000000036                __vector_3
                0x0000000000000036                __vector_11
                0x0000000000000036                __vector_13
                0x0000000000000036                __vector_17
                0x0000000000000036                __vector_7
                0x0000000000000036                __vector_5
                0x0000000000000036                __vector_4
                0x0000000000000036                __vector_9
                0x0000000000000036                __vector_2
                0x0000000000000036                __vector_15
                0x0000000000000036                __vector_8
                0x0000000000000036                __vector_14
                0x0000000000000036                __vector_10
                0x0000000000000036                __vector_16
                0x0000000000000036                __vector_18
 .text          0x0000000000000038      0x14c obj/Release/main.o
                0x000000000000003e                setLED
                0x0000000000000066                error
                0x0000000000000090                setMotor
                0x00000000000000ba                initPorts
                0x00000000000000ca                test
 .text          0x0000000000000184        0x0 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_exit.o)
                0x0000000000000184                . = ALIGN (0x2)
 *(.text.*)
 .text.startup  0x0000000000000184        0x6 obj/Release/main.o
                0x0000000000000184                main
 .text.libgcc.mul
                0x000000000000018a        0x0 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_exit.o)
 .text.libgcc.div
                0x000000000000018a        0x0 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_exit.o)
 .text.libgcc   0x000000000000018a        0x0 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x000000000000018a        0x0 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x000000000000018a        0x0 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x000000000000018a        0x0 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_exit.o)
                0x000000000000018a                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x000000000000018a        0x0 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_exit.o)
                0x000000000000018a                exit
                0x000000000000018a                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x000000000000018a        0x4 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_exit.o)
 *(.fini0)
                0x000000000000018e                _etext = .

.data           0x0000000000800060        0x0 load address 0x000000000000018e
                0x0000000000800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr4/crtm8.o
 .data          0x0000000000800060        0x0 obj/Release/main.o
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_exit.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0000000000800060                . = ALIGN (0x2)
                0x0000000000800060                _edata = .
                0x0000000000800060                PROVIDE (__data_end, .)

.bss            0x0000000000800060        0x0
                0x0000000000800060                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800060        0x0 /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr4/crtm8.o
 .bss           0x0000000000800060        0x0 obj/Release/main.o
 .bss           0x0000000000800060        0x0 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_exit.o)
 *(.bss*)
 *(COMMON)
                0x0000000000800060                PROVIDE (__bss_end, .)
                0x000000000000018e                __data_load_start = LOADADDR (.data)
                0x000000000000018e                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0000000000800060        0x0
                0x0000000000800060                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0000000000800060                PROVIDE (__noinit_end, .)
                0x0000000000800060                _end = .
                0x0000000000800060                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x0000000000000000      0x6cc
 *(.stab)
 .stab          0x0000000000000000      0x6cc /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr4/crtm8.o

.stabstr        0x0000000000000000       0x54
 *(.stabstr)
 .stabstr       0x0000000000000000       0x54 /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr4/crtm8.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 obj/Release/main.o
                                         0x12 (size before relaxing)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(bin/Release/BLC.elf elf32-avr)
LOAD linker stubs

Cross Reference Table

Symbol                                            File
__bad_interrupt                                   /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr4/crtm8.o
__heap_end                                        /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr4/crtm8.o
__init                                            /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr4/crtm8.o
__stack                                           /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr4/crtm8.o
__vector_1                                        /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr4/crtm8.o
__vector_10                                       /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr4/crtm8.o
__vector_11                                       /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr4/crtm8.o
__vector_12                                       /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr4/crtm8.o
__vector_13                                       /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr4/crtm8.o
__vector_14                                       /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr4/crtm8.o
__vector_15                                       /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr4/crtm8.o
__vector_16                                       /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr4/crtm8.o
__vector_17                                       /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr4/crtm8.o
__vector_18                                       /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr4/crtm8.o
__vector_2                                        /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr4/crtm8.o
__vector_3                                        /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr4/crtm8.o
__vector_4                                        /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr4/crtm8.o
__vector_5                                        /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr4/crtm8.o
__vector_6                                        /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr4/crtm8.o
__vector_7                                        /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr4/crtm8.o
__vector_8                                        /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr4/crtm8.o
__vector_9                                        /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr4/crtm8.o
__vector_default                                  /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr4/crtm8.o
__vectors                                         /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr4/crtm8.o
_exit                                             /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_exit.o)
error                                             obj/Release/main.o
exit                                              /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_exit.o)
                                                  /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr4/crtm8.o
initPorts                                         obj/Release/main.o
main                                              obj/Release/main.o
                                                  /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr4/crtm8.o
setLED                                            obj/Release/main.o
setMotor                                          obj/Release/main.o
test                                              obj/Release/main.o
